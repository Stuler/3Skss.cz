parameters:


application:
	errorPresenter: Error
	mapping:
		*: App\*Module\Presenters\*Presenter


session:
	expiration: 14 days


di:
	export:
		parameters: no
		tags: no

security:
	roles:
		guest:
		member: [guest]
		admin: [member]

search:
	section:
		in: %appDir%/Models
		classes:
			- *Repository
			- *DataSource
			- *DataManager
			- *ProcessManager
			- *Process


services:
	- App\Router\RouterFactory::createRouter
	- App\Forms\FormFactory
	- App\Forms\SignInFormFactory
	- App\Forms\SignUpFormFactory
	authenticator: App\Models\UserManager
#	authorizator: App\Models\AuthorizatorFactory::create
	security.authorizator:
		setup:
		- addResource(Admin:Dashboard)
		- addResource(Admin:Command)
		- addResource(Admin:CombatSection)
		- addResource(Admin:TacAir)
		- addResource(Admin:Users)
		- addResource(Admin:Centers)
		- addResource(Admin:Events)
		- addResource(Admin:TrainingCenter)
		- addResource(Admin:Addons)
		- addResource(Admin:FrameworkInstances)
		- addResource(Admin:Exception)
		- addResource(Admin:ServerManager)
		- addResource(Admin:Sign)
		- addResource(Member:Dashboard)
		- allow(admin)
		- allow(guest, Admin:Dashboard, login)
		- allow(guest, Admin:Sign, login)
		- allow(guest, Admin:Dashboard, register)
		- allow(guest, Member:Dashboard, login)

	customRepository:
		factory: App\Components\CustomList\Models\CustomRepository
		inject: true

	searchFilterRepository:
		factory: App\Components\SearchFilter\Models\SearchFilterRepository
		inject: true

	- App\Components\Courses\CourseLevel\CourseLevelFactory
	courseLevel:
		class: App\Components\Courses\CourseLevel\CourseLevel
		inject: true
		autowired: false

	- App\Components\Courses\FormBootcamp\FormBootcampFactory
	formBootcamp:
		class: App\Components\Courses\FormBootcamp\FormBootcamp
		inject: true
		autowired: false

	- App\Components\Courses\FormBootcampParticipant\FormBootcampParticipantFactory
	formBootcampParticipant:
		class: App\Components\Courses\FormBootcampParticipant\FormBootcampParticipant
		inject: true
		autowired: false

	- App\Components\Courses\CourseFamily\CourseFamilyFactory
	courseFamily:
		class: App\Components\Courses\CourseFamily\CourseFamily
		inject: true
		autowired: false

	- App\Components\Courses\UserQualification\UserQualificationFactory
	userQualification:
		class: App\Components\Courses\UserQualification\UserQualification
		inject: true
		autowired: false

	- App\Components\UserDetail\UserDetailFactory
	userDetail:
		class: App\Components\UserDetail\UserDetail
		inject: true
		autowired: false

	- App\Components\DialogWindow\DialogWindowFactory
	dialogWindow:
		class: App\Components\DialogWindow\DialogWindow
		inject: true
		autowired: false

	- App\Components\CustomList\CustomListFactory
	customList:
		class: App\Components\CustomList\CustomList
		inject: true
		autowired: false

	- App\Components\SearchFilter\SearchFilterFactory
	searchFilter:
		class: App\Components\SearchFilter\SearchFilter
		inject: true
		autowired: false

	- App\Components\FormSquad\FormSquadFactory
	formSquad:
		class: App\Components\FormSquad\FormSquad
		inject: true
		autowired: false

	- App\Components\FormDetachment\FormDetachmentFactory
	formDetachment:
		class: App\Components\FormDetachment\FormDetachment
		inject: true
		autowired: false

extensions:
	console: Contributte\Console\DI\ConsoleExtension(%consoleMode%)
	migrations: Nextras\Migrations\Bridges\NetteDI\MigrationsExtension
	webpack: Oops\WebpackNetteAdapter\DI\WebpackExtension(%debugMode%, %consoleMode%)

migrations:
	dir: %appDir%/migrations 	# migrations base directory
	driver: mysql               # pgsql or mysql
	dbal: nette               	# nextras, nette, doctrine or dibi
	withDummyData: %debugMode%

webpack:
    build:
        directory: %wwwDir%/assets
        publicPath: assets/
    devServer:
        enabled: %debugMode%
        url: http://localhost:8000/assets

